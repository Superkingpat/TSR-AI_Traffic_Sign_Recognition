version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_JMX_PORT: 9102
      ZOOKEEPER_OPTS: "-javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=9102:/etc/jmx-exporter/zookeeper-metrics-rules.yaml"
    volumes:
      - C:/Users/steam/OneDrive/Namizje/Kafka_server/jmx-config:/etc/jmx-exporter
      - C:/Users/steam/OneDrive/Namizje/Kafka_server/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar
    networks:
      - kafka-net

  broker:
    image: confluentinc/cp-kafka
    container_name: broker
    ports:
      - "9092:9092"
      - "9103:9103"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9094,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://:9094,OUTSIDE://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9103
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: "-javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar=9103:/etc/jmx-exporter/kafka-metrics-rules.yaml"
    volumes:
      - C:/Users/steam/OneDrive/Namizje/Kafka_server/jmx-config:/etc/jmx-exporter
      - C:/Users/steam/OneDrive/Namizje/Kafka_server/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.16.1.jar
    networks:
      - kafka-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
     - "9090:9090"
    volumes:
     - C:/Users/steam/OneDrive/Namizje/Kafka_server/Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    extra_hosts:
     - "host.docker.internal:host-gateway"
    networks:
      - kafka-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
     - "3000:3000"
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge